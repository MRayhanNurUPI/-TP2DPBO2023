/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package tp2dpbo;

import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.nio.file.Files;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author ILHAM
 */
public class CardKomika extends javax.swing.JPanel {

    private dbConnection db;
    private int idKomika;
    private String nama;
    private String path;
    /**
     * Creates new form CardKomika
     */
    public CardKomika(int id, String nama, String path) {
        initComponents();
        db = new dbConnection();
        
        idKomika = id;
        this.nama = nama;
        this.path = path;
    
        komikaLabel.setText(nama);
        ImageIcon icon = new ImageIcon(this.path);
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(150, 200, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        fotoKomikaLabel.setIcon(scaledIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fotoKomikaLabel = new javax.swing.JLabel();
        komikaLabel = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        fotoKomikaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fotoKomikaLabel.setAlignmentY(0.0F);
        fotoKomikaLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fotoKomikaLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        komikaLabel.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        komikaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        komikaLabel.setText("KOMIKA");

        editButton.setBackground(new java.awt.Color(255, 255, 102));
        editButton.setText("Edit");
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editButtonMouseClicked(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 51, 51));
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(komikaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(editButton)
                        .addGap(39, 39, 39)
                        .addComponent(deleteButton)
                        .addGap(0, 54, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(fotoKomikaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(fotoKomikaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(komikaLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(deleteButton))
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        // TODO add your handling code here:
        FormKomika form = new FormKomika(this.idKomika, this.nama, this.path);
        form.setVisible(true);
        
        Homepage parent = (Homepage) this.getTopLevelAncestor();
        form.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                 if (parent != null) parent.setPanelKomika();
             }
         });
    }//GEN-LAST:event_editButtonMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int opsi = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data?", "Konfirmasi Hapus",
			JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if  (opsi == JOptionPane.YES_OPTION) {
            String sql = "DELETE FROM komika WHERE id_komika ="+idKomika+"";
            db.updateQuery(sql);
            
            // Show Information
            System.out.println("Delete Success!");
            JOptionPane.showMessageDialog(null, "Data Komika berhasil dihapus!");
            Homepage parent = (Homepage) this.getTopLevelAncestor();
            parent.setPanelKomika();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel fotoKomikaLabel;
    private javax.swing.JLabel komikaLabel;
    // End of variables declaration//GEN-END:variables
}
